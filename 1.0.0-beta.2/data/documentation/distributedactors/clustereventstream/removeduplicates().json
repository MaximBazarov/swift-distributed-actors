{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeDuplicates"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AsyncRemoveDuplicatesSequence","preciseIdentifier":"s:15AsyncAlgorithms0A24RemoveDuplicatesSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedactors\/clustereventstream\/removeduplicates()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterEventStream\/removeDuplicates()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"AsyncSequence.removeDuplicates()"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"removeDuplicates()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeDuplicates"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AsyncRemoveDuplicatesSequence","preciseIdentifier":"s:15AsyncAlgorithms0A24RemoveDuplicatesSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:Sci15AsyncAlgorithmsSQ7ElementRpzrlE16removeDuplicatesAA0a6RemoveE8SequenceVyxGyF::SYNTHESIZED::s:17DistributedActors18ClusterEventStreamV","extendedModule":"_Concurrency","modules":[{"name":"DistributedActors"}]},"hierarchy":{"paths":[["doc:\/\/DistributedActors\/documentation\/DistributedActors","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterEventStream","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterEventStream\/AsyncSequence-Implementations"]]},"references":{"doc://DistributedActors/documentation/DistributedActors/ClusterEventStream/removeDuplicates()":{"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"removeDuplicates()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeDuplicates"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AsyncRemoveDuplicatesSequence","preciseIdentifier":"s:15AsyncAlgorithms0A24RemoveDuplicatesSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterEventStream\/removeDuplicates()","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/clustereventstream\/removeduplicates()"},"doc://DistributedActors/documentation/DistributedActors/ClusterEventStream":{"role":"symbol","title":"ClusterEventStream","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterEventStream"}],"abstract":[{"type":"codeVoice","code":"ClusterEventStream"},{"type":"text","text":" manages a set of subscribers and forwards every event published to it to"},{"type":"text","text":" "},{"type":"text","text":"all its subscribers. An actor can subscribe\/unsubscribe to the event stream via "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"type":"text","text":"constructs. Subscribers will be watched and removed in case they terminate."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterEventStream","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterEventStream"}],"url":"\/documentation\/distributedactors\/clustereventstream"},"doc://DistributedActors/documentation/DistributedActors/ClusterEventStream/AsyncSequence-Implementations":{"role":"collectionGroup","title":"AsyncSequence Implementations","abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterEventStream\/AsyncSequence-Implementations","kind":"article","type":"topic","url":"\/documentation\/distributedactors\/clustereventstream\/asyncsequence-implementations"},"doc://DistributedActors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"}}}