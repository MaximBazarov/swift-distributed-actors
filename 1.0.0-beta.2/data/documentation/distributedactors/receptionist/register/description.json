{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"override"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedactors\/receptionist\/register\/description"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Receptionist\/Register\/description","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"title":"description","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:17DistributedActors12ReceptionistV8RegisterC11descriptionSSvp","modules":[{"name":"DistributedActors"}]},"hierarchy":{"paths":[["doc:\/\/DistributedActors\/documentation\/DistributedActors","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Receptionist","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Receptionist\/Register"]]},"references":{"doc://DistributedActors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"},"doc://DistributedActors/documentation/DistributedActors/Receptionist/Register":{"role":"symbol","title":"Receptionist.Register","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Register"}],"abstract":[{"type":"text","text":"INTERNAL API"},{"type":"text","text":" "},{"type":"text","text":"When sent to receptionist will register the specified "},{"type":"codeVoice","code":"_ActorRef"},{"type":"text","text":" under the given "},{"type":"codeVoice","code":"_Reception.Key"}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Receptionist\/Register","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Register"}],"url":"\/documentation\/distributedactors\/receptionist\/register"},"doc://DistributedActors/documentation/DistributedActors/Receptionist/Register/description":{"role":"symbol","title":"description","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Receptionist\/Register\/description","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/receptionist\/register\/description"},"doc://DistributedActors/documentation/DistributedActors/Receptionist":{"role":"article","title":"Receptionist","abstract":[{"type":"text","text":"Discovering actors is an important aspect of distributed programming, as it is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"the"}]},{"type":"text","text":" primary way we can discover actors on other nodes,"},{"type":"text","text":" "},{"type":"text","text":"and communicate with them."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Receptionist","kind":"article","type":"topic","url":"\/documentation\/distributedactors\/receptionist"}}}