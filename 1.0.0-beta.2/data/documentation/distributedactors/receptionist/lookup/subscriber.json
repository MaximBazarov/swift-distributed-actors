{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscriber"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"_ActorRef"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"_Reception"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Listing"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Guest"},{"kind":"text","text":">>"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedactors\/receptionist\/lookup\/subscriber"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Receptionist\/Lookup\/subscriber","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ListingRequest.subscriber"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscriber"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"_ActorRef"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"_Reception"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Listing"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Guest"},{"kind":"text","text":">>"}],"title":"subscriber","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:17DistributedActors12ReceptionistV6LookupC10subscriberAA9_ActorRefVyAA10_ReceptionO7ListingVy_xGGvp","modules":[{"name":"DistributedActors"}]},"hierarchy":{"paths":[["doc:\/\/DistributedActors\/documentation\/DistributedActors","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Receptionist","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Receptionist\/Lookup"]]},"references":{"doc://DistributedActors/documentation/DistributedActors/Receptionist/Lookup":{"role":"symbol","title":"Receptionist.Lookup","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lookup"}],"abstract":[{"type":"text","text":"INTERNAL API"},{"type":"text","text":" "},{"type":"text","text":"Used to lookup "},{"type":"codeVoice","code":"_ActorRef"},{"type":"text","text":"s for the given "},{"type":"codeVoice","code":"_Reception.Key"}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Receptionist\/Lookup","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Lookup"}],"url":"\/documentation\/distributedactors\/receptionist\/lookup"},"doc://DistributedActors/documentation/DistributedActors/Receptionist":{"role":"article","title":"Receptionist","abstract":[{"type":"text","text":"Discovering actors is an important aspect of distributed programming, as it is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"the"}]},{"type":"text","text":" primary way we can discover actors on other nodes,"},{"type":"text","text":" "},{"type":"text","text":"and communicate with them."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Receptionist","kind":"article","type":"topic","url":"\/documentation\/distributedactors\/receptionist"},"doc://DistributedActors/documentation/DistributedActors/Receptionist/Lookup/subscriber":{"role":"symbol","title":"subscriber","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscriber"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"_ActorRef"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"_Reception"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Listing"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Guest"},{"kind":"text","text":">>"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Receptionist\/Lookup\/subscriber","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/receptionist\/lookup\/subscriber"},"doc://DistributedActors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"}}}