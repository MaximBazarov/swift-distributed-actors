{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"outboundManifest"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"messageType"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization","preciseIdentifier":"s:17DistributedActors13SerializationC","text":"Serialization"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization\/Manifest","preciseIdentifier":"s:17DistributedActors13SerializationC8ManifestV","text":"Manifest"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Manifests only represent names of types, and do not carry versioning information,"},{"type":"text","text":" "},{"type":"text","text":"as such it may be necessary to carry additional information in order to version APIs more resiliently."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedactors\/serialization\/outboundmanifest(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization\/outboundManifest(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a manifest, a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"recoverable"}]},{"type":"text","text":" representation of a message."},{"type":"text","text":" "},{"type":"text","text":"Manifests may be serialized and later used to recover (manifest) type information on another"},{"type":"text","text":" "},{"type":"text","text":"node which can understand it."}],"kind":"symbol","metadata":{"role":"symbol","title":"outboundManifest(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"outboundManifest"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Serialization","preciseIdentifier":"s:17DistributedActors13SerializationC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Manifest","preciseIdentifier":"s:17DistributedActors13SerializationC8ManifestV"}],"symbolKind":"method","externalID":"s:17DistributedActors13SerializationC16outboundManifestyAC0E0VypXpKF","extendedModule":"DistributedActors","modules":[{"name":"DistributedActors"}]},"hierarchy":{"paths":[["doc:\/\/DistributedActors\/documentation\/DistributedActors","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization"]]},"references":{"doc://DistributedActors/documentation/DistributedActors/Serialization/Manifest":{"role":"symbol","title":"Serialization.Manifest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Manifest"}],"abstract":[{"type":"text","text":"Serialization manifests are used to carry enough information along a serialized payload,"},{"type":"text","text":" "},{"type":"text","text":"such that the payload may be safely deserialized into the right type on the recipient system."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization\/Manifest","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Manifest"}],"url":"\/documentation\/distributedactors\/serialization\/manifest"},"doc://DistributedActors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"},"doc://DistributedActors/documentation/DistributedActors/Serialization":{"role":"symbol","title":"Serialization","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Serialization"}],"abstract":[{"type":"text","text":"Actor messaging specialized serialization engine."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Serialization"}],"url":"\/documentation\/distributedactors\/serialization"},"doc://DistributedActors/documentation/DistributedActors/Serialization/outboundManifest(_:)":{"role":"symbol","title":"outboundManifest(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"outboundManifest"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Serialization","preciseIdentifier":"s:17DistributedActors13SerializationC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Manifest","preciseIdentifier":"s:17DistributedActors13SerializationC8ManifestV"}],"abstract":[{"type":"text","text":"Creates a manifest, a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"recoverable"}]},{"type":"text","text":" representation of a message."},{"type":"text","text":" "},{"type":"text","text":"Manifests may be serialized and later used to recover (manifest) type information on another"},{"type":"text","text":" "},{"type":"text","text":"node which can understand it."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization\/outboundManifest(_:)","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/serialization\/outboundmanifest(_:)"}}}