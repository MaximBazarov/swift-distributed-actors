{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorIncarnation","preciseIdentifier":"s:17DistributedActors16ActorIncarnationV","text":"ActorIncarnation"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedactors\/actorincarnation\/random()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorIncarnation\/random()","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"role":"symbol","title":"random()","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ActorIncarnation","preciseIdentifier":"s:17DistributedActors16ActorIncarnationV"}],"symbolKind":"method","externalID":"s:17DistributedActors16ActorIncarnationV6randomACyFZ","extendedModule":"DistributedActors","modules":[{"name":"DistributedActors"}]},"hierarchy":{"paths":[["doc:\/\/DistributedActors\/documentation\/DistributedActors","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorIncarnation"]]},"references":{"doc://DistributedActors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"},"doc://DistributedActors/documentation/DistributedActors/ActorIncarnation/random()":{"role":"symbol","title":"random()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ActorIncarnation","preciseIdentifier":"s:17DistributedActors16ActorIncarnationV"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorIncarnation\/random()","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/actorincarnation\/random()"},"doc://DistributedActors/documentation/DistributedActors/ActorIncarnation":{"role":"symbol","title":"ActorIncarnation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorIncarnation"}],"abstract":[{"type":"text","text":"Used to uniquely identify a specific “incarnation” of an Actor and therefore provide unique identity to "},{"type":"codeVoice","code":"ActorID"},{"type":"text","text":" and "},{"type":"codeVoice","code":"_ActorRef"},{"type":"text","text":"s."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorIncarnation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActorIncarnation"}],"url":"\/documentation\/distributedactors\/actorincarnation"}}}