{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"join"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/UniqueNode","preciseIdentifier":"s:17DistributedActors10UniqueNodeV","text":"UniqueNode"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"node","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The node to be joined by this system."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, in local testing scenarios, where the two nodes are executing in the same process (e.g. in a test),"},{"type":"text","text":" "},{"type":"text","text":"this call saves the unwrapping of "},{"type":"codeVoice","code":"cluster.node"},{"type":"text","text":" into the generic node when joining them."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedactors\/clustercontrol\/join(node:)-26kp1"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterControl\/join(node:)-26kp1","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Usually not to be used, as having an instance of a "},{"type":"codeVoice","code":"UniqueNode"},{"type":"text","text":" in hand"},{"type":"text","text":" "},{"type":"text","text":"is normally only possible after a handshake with the remote node has completed."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"join"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UniqueNode","preciseIdentifier":"s:17DistributedActors10UniqueNodeV"},{"kind":"text","text":")"}],"title":"join(node:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:17DistributedActors14ClusterControlV4join4nodeyAA10UniqueNodeV_tF","modules":[{"name":"DistributedActors"}]},"hierarchy":{"paths":[["doc:\/\/DistributedActors\/documentation\/DistributedActors","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterControl"]]},"references":{"doc://DistributedActors/documentation/DistributedActors/ClusterControl/join(node:)-26kp1":{"role":"symbol","title":"join(node:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"join"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UniqueNode","preciseIdentifier":"s:17DistributedActors10UniqueNodeV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Usually not to be used, as having an instance of a "},{"type":"codeVoice","code":"UniqueNode"},{"type":"text","text":" in hand"},{"type":"text","text":" "},{"type":"text","text":"is normally only possible after a handshake with the remote node has completed."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterControl\/join(node:)-26kp1","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/clustercontrol\/join(node:)-26kp1"},"doc://DistributedActors/documentation/DistributedActors/ClusterControl":{"role":"symbol","title":"ClusterControl","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterControl"}],"abstract":[{"type":"text","text":"Allows controlling the cluster, e.g. by issuing join\/down commands, or subscribing to cluster events."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterControl","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterControl"}],"url":"\/documentation\/distributedactors\/clustercontrol"},"doc://DistributedActors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"},"doc://DistributedActors/documentation/DistributedActors/UniqueNode":{"role":"symbol","title":"UniqueNode","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UniqueNode"}],"abstract":[{"type":"text","text":"A "},{"type":"emphasis","inlineContent":[{"type":"text","text":"unique"}]},{"type":"text","text":" node which includes also the node’s unique "},{"type":"codeVoice","code":"UID"},{"type":"text","text":" which is used to disambiguate"},{"type":"text","text":" "},{"type":"text","text":"multiple incarnations of a system on the same host\/port part – similar to how an "},{"type":"codeVoice","code":"ActorIncarnation"},{"type":"text","text":" "},{"type":"text","text":"is used on the per-actor level."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/UniqueNode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UniqueNode"}],"url":"\/documentation\/distributedactors\/uniquenode"}}}