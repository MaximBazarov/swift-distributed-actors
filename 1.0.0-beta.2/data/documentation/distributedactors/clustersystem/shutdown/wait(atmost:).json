{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":" "},{"kind":"internalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedactors\/clustersystem\/shutdown\/wait(atmost:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystem\/Shutdown\/wait(atMost:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"role":"symbol","title":"wait(atMost:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"symbolKind":"method","externalID":"s:17DistributedActors13ClusterSystemC8ShutdownV4wait6atMostys8DurationV_tKF","modules":[{"name":"DistributedActors"}],"platforms":[]},"hierarchy":{"paths":[["doc:\/\/DistributedActors\/documentation\/DistributedActors","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystem","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystem\/Shutdown"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"will be replaced by distributed actor \/ closure version"}]}],"references":{"doc://DistributedActors/documentation/DistributedActors/ClusterSystem/Shutdown":{"role":"symbol","title":"ClusterSystem.Shutdown","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Shutdown"}],"abstract":[{"type":"text","text":"Object that can be awaited on until the system has completed shutting down."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystem\/Shutdown","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Shutdown"}],"url":"\/documentation\/distributedactors\/clustersystem\/shutdown"},"doc://DistributedActors/documentation/DistributedActors/ClusterSystem/Shutdown/wait(atMost:)":{"role":"symbol","title":"wait(atMost:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystem\/Shutdown\/wait(atMost:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/distributedactors\/clustersystem\/shutdown\/wait(atmost:)"},"doc://DistributedActors/documentation/DistributedActors/ClusterSystem":{"role":"symbol","title":"ClusterSystem","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterSystem"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ClusterSystem"},{"type":"text","text":" is a confined space which runs and manages Actors."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystem","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterSystem"}],"url":"\/documentation\/distributedactors\/clustersystem"},"doc://DistributedActors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"}}}