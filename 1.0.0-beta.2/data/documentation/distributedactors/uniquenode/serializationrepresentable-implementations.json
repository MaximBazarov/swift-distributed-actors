{"variants":[{"paths":["\/documentation\/distributedactors\/uniquenode\/serializationrepresentable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/UniqueNode\/SerializationRepresentable-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Type Properties","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/UniqueNode\/defaultSerializerID"],"generated":true}],"kind":"article","metadata":{"modules":[{"name":"DistributedActors"}],"role":"collectionGroup","title":"SerializationRepresentable Implementations"},"hierarchy":{"paths":[["doc:\/\/DistributedActors\/documentation\/DistributedActors","doc:\/\/DistributedActors\/documentation\/DistributedActors\/UniqueNode"]]},"references":{"doc://DistributedActors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"},"doc://DistributedActors/documentation/DistributedActors/UniqueNode/defaultSerializerID":{"role":"symbol","title":"defaultSerializerID","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"defaultSerializerID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Serialization","preciseIdentifier":"s:17DistributedActors13SerializationC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SerializerID","preciseIdentifier":"s:17DistributedActors13SerializationC12SerializerIDV"},{"kind":"text","text":"?"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/UniqueNode\/defaultSerializerID","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/uniquenode\/defaultserializerid"},"doc://DistributedActors/documentation/DistributedActors/UniqueNode":{"role":"symbol","title":"UniqueNode","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UniqueNode"}],"abstract":[{"type":"text","text":"A "},{"type":"emphasis","inlineContent":[{"type":"text","text":"unique"}]},{"type":"text","text":" node which includes also the node’s unique "},{"type":"codeVoice","code":"UID"},{"type":"text","text":" which is used to disambiguate"},{"type":"text","text":" "},{"type":"text","text":"multiple incarnations of a system on the same host\/port part – similar to how an "},{"type":"codeVoice","code":"ActorIncarnation"},{"type":"text","text":" "},{"type":"text","text":"is used on the per-actor level."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/UniqueNode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UniqueNode"}],"url":"\/documentation\/distributedactors\/uniquenode"}}}