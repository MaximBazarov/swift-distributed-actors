{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Selector"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedactors\/workerpool\/selector"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/WorkerPool\/Selector","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A selector defines how actors should be selected to participate in the pool."},{"type":"text","text":" "},{"type":"text","text":"E.g. the "},{"type":"codeVoice","code":"dynamic"},{"type":"text","text":" mode uses a receptionist key, and will add any workers which register"},{"type":"text","text":" "},{"type":"text","text":"using this key to the pool. On the other hand, static configurations could restrict the set"},{"type":"text","text":" "},{"type":"text","text":"of members to be statically provided etc."}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"Selector"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Worker"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DistributedWorker"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Worker.ActorSystem"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ClusterSystem"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"WorkerPool.Selector","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Selector"}],"symbolKind":"struct","externalID":"s:17DistributedActors10WorkerPoolC8SelectorV","extendedModule":"DistributedActors","modules":[{"name":"DistributedActors"}]},"hierarchy":{"paths":[["doc:\/\/DistributedActors\/documentation\/DistributedActors","doc:\/\/DistributedActors\/documentation\/DistributedActors\/WorkerPool"]]},"topicSections":[{"title":"Type Methods","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/WorkerPool\/Selector\/dynamic(_:)","doc:\/\/DistributedActors\/documentation\/DistributedActors\/WorkerPool\/Selector\/static(_:)"]}],"references":{"doc://DistributedActors/documentation/DistributedActors/WorkerPool/Selector":{"conformance":{"constraints":[{"type":"codeVoice","code":"Worker"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DistributedWorker"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Worker.ActorSystem"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ClusterSystem"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"WorkerPool.Selector","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Selector"}],"abstract":[{"type":"text","text":"A selector defines how actors should be selected to participate in the pool."},{"type":"text","text":" "},{"type":"text","text":"E.g. the "},{"type":"codeVoice","code":"dynamic"},{"type":"text","text":" mode uses a receptionist key, and will add any workers which register"},{"type":"text","text":" "},{"type":"text","text":"using this key to the pool. On the other hand, static configurations could restrict the set"},{"type":"text","text":" "},{"type":"text","text":"of members to be statically provided etc."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/WorkerPool\/Selector","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Selector"}],"url":"\/documentation\/distributedactors\/workerpool\/selector"},"doc://DistributedActors/documentation/DistributedActors/WorkerPool":{"role":"symbol","title":"WorkerPool","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WorkerPool"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/WorkerPool","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WorkerPool"}],"url":"\/documentation\/distributedactors\/workerpool"},"doc://DistributedActors/documentation/DistributedActors/WorkerPool/Selector/static(_:)":{"role":"symbol","title":"static(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`static`"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Worker"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"WorkerPool","preciseIdentifier":"s:17DistributedActors10WorkerPoolC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Worker"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Selector","preciseIdentifier":"s:17DistributedActors10WorkerPoolC8SelectorV"}],"abstract":[{"type":"text","text":"Instructs the "},{"type":"codeVoice","code":"WorkerPool"},{"type":"text","text":" to use only the specified actors for routing."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/WorkerPool\/Selector\/static(_:)","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/workerpool\/selector\/static(_:)"},"doc://DistributedActors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"},"doc://DistributedActors/documentation/DistributedActors/WorkerPool/Selector/dynamic(_:)":{"role":"symbol","title":"dynamic(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dynamic"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"DistributedReception","preciseIdentifier":"s:17DistributedActors0A9ReceptionO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Key","preciseIdentifier":"s:17DistributedActors0A9ReceptionO3KeyV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Worker"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"WorkerPool","preciseIdentifier":"s:17DistributedActors10WorkerPoolC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Worker"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Selector","preciseIdentifier":"s:17DistributedActors10WorkerPoolC8SelectorV"}],"abstract":[{"type":"text","text":"Instructs the "},{"type":"codeVoice","code":"WorkerPool"},{"type":"text","text":" to subscribe to given receptionist key, and add\/remove"},{"type":"text","text":" "},{"type":"text","text":"any actors which register\/leave with the receptionist using this key."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/WorkerPool\/Selector\/dynamic(_:)","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/workerpool\/selector\/dynamic(_:)"}}}