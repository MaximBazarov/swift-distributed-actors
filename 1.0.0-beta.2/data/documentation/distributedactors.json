{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This project provides a cluster runtime implementation for the distributed actors language feature."}]},{"anchor":"Beta-software","level":3,"type":"heading","text":"Beta software"},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This library is currently released as "},{"type":"strong","inlineContent":[{"type":"text","text":"beta"}]},{"type":"text","text":" preview software. While we anticipate very few changes, please be mindful that until a stable 1.0 version is announced, this library does not guarantee source compatibility."}]}],"type":"aside","name":"Important"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This project will continue to be polished alongside the beta releases of Xcode and Swift 5.7, with the intention to release a source-stable 1.0 release around the time a stable Swift 5.7 is released."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Please note that this project requires the latest "},{"type":"strong","inlineContent":[{"type":"text","text":"Swift 5.7"}]},{"type":"text","text":" language features, and as such to work with it (and the "},{"type":"codeVoice","code":"distributed actor"},{"type":"text","text":" feature in general), you must be using the latest Xcode beta releases, or a nightly 5.7 development toolchain Swift which you can download from "},{"type":"reference","isActive":true,"identifier":"https:\/\/swift.org\/download\/#snapshots"},{"type":"text","text":","}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/distributedactors"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DistributedActors\/documentation\/DistributedActors","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"DistributedActors","title":"DistributedActors","symbolKind":"module","role":"collection","modules":[{"name":"DistributedActors"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Articles","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/Introduction","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Clustering","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Lifecycle","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Receptionist","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSingleton","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Security","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Observability"]},{"title":"Clustering essentials","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystem","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Cluster","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Cluster\/Membership","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Cluster\/Member","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Cluster\/Event"]},{"title":"Actor Identity","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystem\/ActorID","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorMetadata"]},{"title":"Lifecycle monitoring","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/LifecycleWatch"]},{"title":"Serialization","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization\/Context","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization\/Buffer","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization\/Manifest","doc:\/\/DistributedActors\/documentation\/DistributedActors\/CodableSerializationContext"]},{"title":"Distributed Worker Pool","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/WorkerPool","doc:\/\/DistributedActors\/documentation\/DistributedActors\/DistributedWorker"]},{"title":"Leader Election","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/LeaderElection"]},{"title":"Settings","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystemSettings","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ServiceDiscoverySettings","doc:\/\/DistributedActors\/documentation\/DistributedActors\/OnDownActionStrategySettings"]},{"title":"Utilities","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/ExponentialBackoffStrategy","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Backoff"]},{"title":"Classes","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/DeadLetterOffice","doc:\/\/DistributedActors\/documentation\/DistributedActors\/DistributedActorContext","doc:\/\/DistributedActors\/documentation\/DistributedActors\/OpLogDistributedReceptionist","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serializer","doc:\/\/DistributedActors\/documentation\/DistributedActors\/TimeoutBasedDowningStrategy"]},{"title":"Protocols","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/AddressableActor","doc:\/\/DistributedActors\/documentation\/DistributedActors\/AnyActorMetadataKey","doc:\/\/DistributedActors\/documentation\/DistributedActors\/AnySerializer","doc:\/\/DistributedActors\/documentation\/DistributedActors\/BackoffStrategy","doc:\/\/DistributedActors\/documentation\/DistributedActors\/CustomPrettyStringConvertible","doc:\/\/DistributedActors\/documentation\/DistributedActors\/DistributedReceptionist","doc:\/\/DistributedActors\/documentation\/DistributedActors\/DowningStrategy","doc:\/\/DistributedActors\/documentation\/DistributedActors\/SerializationRepresentable"]},{"title":"Structures","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActiveMetricsOptionSet","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorIncarnation","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorMetadataKey","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorMetadataKeys","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorPath","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorPathSegment","doc:\/\/DistributedActors\/documentation\/DistributedActors\/AnyReceptionKey","doc:\/\/DistributedActors\/documentation\/DistributedActors\/BestEffortStringError","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterControl","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterEventStream","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterInvocationDecoder","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterInvocationEncoder","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterInvocationResultHandler","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystemError","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ConstantBackoffStrategy","doc:\/\/DistributedActors\/documentation\/DistributedActors\/DeadLetter","doc:\/\/DistributedActors\/documentation\/DistributedActors\/DeadLetterError","doc:\/\/DistributedActors\/documentation\/DistributedActors\/DowningStrategyDirective","doc:\/\/DistributedActors\/documentation\/DistributedActors\/DowningStrategySettings","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ErrorEnvelope","doc:\/\/DistributedActors\/documentation\/DistributedActors\/GenericRemoteCallError","doc:\/\/DistributedActors\/documentation\/DistributedActors\/InboundSystemMessageRedeliverySettings","doc:\/\/DistributedActors\/documentation\/DistributedActors\/InvocationMessage","doc:\/\/DistributedActors\/documentation\/DistributedActors\/LeaderElectionContext","doc:\/\/DistributedActors\/documentation\/DistributedActors\/LeaderElectionResult","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Leadership","doc:\/\/DistributedActors\/documentation\/DistributedActors\/LeftOverBytesError","doc:\/\/DistributedActors\/documentation\/DistributedActors\/LoggingSettings","doc:\/\/DistributedActors\/documentation\/DistributedActors\/MetricsProps","doc:\/\/DistributedActors\/documentation\/DistributedActors\/MetricsSettings","doc:\/\/DistributedActors\/documentation\/DistributedActors\/Node","doc:\/\/DistributedActors\/documentation\/DistributedActors\/NonTransportableAnyError","doc:\/\/DistributedActors\/documentation\/DistributedActors\/OutboundSystemMessageRedeliverySettings","doc:\/\/DistributedActors\/documentation\/DistributedActors\/PluginsSettings","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ReceptionistSettings","doc:\/\/DistributedActors\/documentation\/DistributedActors\/RemoteCallError","doc:\/\/DistributedActors\/documentation\/DistributedActors\/ResolveError","doc:\/\/DistributedActors\/documentation\/DistributedActors\/SerializationError","doc:\/\/DistributedActors\/documentation\/DistributedActors\/TimeoutBasedDowningStrategySettings","doc:\/\/DistributedActors\/documentation\/DistributedActors\/TimeoutError","doc:\/\/DistributedActors\/documentation\/DistributedActors\/UniqueNode","doc:\/\/DistributedActors\/documentation\/DistributedActors\/UniqueNodeID","doc:\/\/DistributedActors\/documentation\/DistributedActors\/WeakActorDictionary","doc:\/\/DistributedActors\/documentation\/DistributedActors\/WeakAnyDistributedActorDictionary","doc:\/\/DistributedActors\/documentation\/DistributedActors\/WorkerPoolError","doc:\/\/DistributedActors\/documentation\/DistributedActors\/WorkerPoolSettings"]},{"title":"Type Aliases","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorID"]},{"title":"Enumerations","identifiers":["doc:\/\/DistributedActors\/documentation\/DistributedActors\/DistributedReception","doc:\/\/DistributedActors\/documentation\/DistributedActors\/RemoteCall"]}],"references":{"doc://DistributedActors/documentation/DistributedActors/Clustering":{"role":"article","title":"Clustering","abstract":[{"type":"text","text":"Clustering multiple actor system instances into a single Distributed Actor System."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Clustering","kind":"article","type":"topic","url":"\/documentation\/distributedactors\/clustering"},"doc://DistributedActors/documentation/DistributedActors/Cluster/Event":{"role":"symbol","title":"Cluster.Event","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"}],"abstract":[{"type":"text","text":"Represents cluster events, most notably regarding membership and reachability of other members of the cluster."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Cluster\/Event","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Event"}],"url":"\/documentation\/distributedactors\/cluster\/event"},"doc://DistributedActors/documentation/DistributedActors/Serializer":{"role":"symbol","title":"Serializer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Serializer"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serializer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Serializer"}],"url":"\/documentation\/distributedactors\/serializer"},"doc://DistributedActors/documentation/DistributedActors/PluginsSettings":{"role":"symbol","title":"PluginsSettings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginsSettings"}],"abstract":[{"type":"text","text":"Settings for "},{"type":"codeVoice","code":"ClusterSystem"},{"type":"text","text":" plugins."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/PluginsSettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginsSettings"}],"url":"\/documentation\/distributedactors\/pluginssettings"},"doc://DistributedActors/documentation/DistributedActors/OpLogDistributedReceptionist":{"role":"symbol","title":"OpLogDistributedReceptionist","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"OpLogDistributedReceptionist"}],"abstract":[{"type":"text","text":"Cluster-aware (atomic broadcast style, push\/pull-gossip) Receptionist implementation."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/OpLogDistributedReceptionist","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OpLogDistributedReceptionist"}],"url":"\/documentation\/distributedactors\/oplogdistributedreceptionist"},"doc://DistributedActors/documentation/DistributedActors/InboundSystemMessageRedeliverySettings":{"role":"symbol","title":"InboundSystemMessageRedeliverySettings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundSystemMessageRedeliverySettings"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/InboundSystemMessageRedeliverySettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundSystemMessageRedeliverySettings"}],"url":"\/documentation\/distributedactors\/inboundsystemmessageredeliverysettings"},"doc://DistributedActors/documentation/DistributedActors/ReceptionistSettings":{"role":"symbol","title":"ReceptionistSettings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReceptionistSettings"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ReceptionistSettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReceptionistSettings"}],"url":"\/documentation\/distributedactors\/receptionistsettings"},"doc://DistributedActors/documentation/DistributedActors/ClusterSystemSettings":{"role":"symbol","title":"ClusterSystemSettings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterSystemSettings"}],"abstract":[{"type":"text","text":"Settings used to configure a "},{"type":"codeVoice","code":"ClusterSystem"},{"type":"text","text":"."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystemSettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterSystemSettings"}],"url":"\/documentation\/distributedactors\/clustersystemsettings"},"doc://DistributedActors/documentation/DistributedActors/DeadLetterError":{"role":"symbol","title":"DeadLetterError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeadLetterError"}],"abstract":[{"type":"text","text":"Dead letter errors may be transported back to remote callers, to indicate the recipient they tried to contact is no longer alive."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/DeadLetterError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DeadLetterError"}],"url":"\/documentation\/distributedactors\/deadlettererror"},"doc://DistributedActors/documentation/DistributedActors/DeadLetterOffice":{"role":"symbol","title":"DeadLetterOffice","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeadLetterOffice"}],"abstract":[{"type":"text","text":"Special actor ref personality, which can handle "},{"type":"codeVoice","code":"DeadLetter"},{"type":"text","text":"s."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/DeadLetterOffice","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DeadLetterOffice"}],"url":"\/documentation\/distributedactors\/deadletteroffice"},"doc://DistributedActors/documentation/DistributedActors/BestEffortStringError":{"role":"symbol","title":"BestEffortStringError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BestEffortStringError"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/BestEffortStringError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BestEffortStringError"}],"url":"\/documentation\/distributedactors\/besteffortstringerror"},"doc://DistributedActors/documentation/DistributedActors/ClusterSystemError":{"role":"symbol","title":"ClusterSystemError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterSystemError"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystemError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterSystemError"}],"url":"\/documentation\/distributedactors\/clustersystemerror"},"doc://DistributedActors/documentation/DistributedActors/UniqueNode":{"role":"symbol","title":"UniqueNode","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UniqueNode"}],"abstract":[{"type":"text","text":"A "},{"type":"emphasis","inlineContent":[{"type":"text","text":"unique"}]},{"type":"text","text":" node which includes also the node’s unique "},{"type":"codeVoice","code":"UID"},{"type":"text","text":" which is used to disambiguate"},{"type":"text","text":" "},{"type":"text","text":"multiple incarnations of a system on the same host\/port part – similar to how an "},{"type":"codeVoice","code":"ActorIncarnation"},{"type":"text","text":" "},{"type":"text","text":"is used on the per-actor level."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/UniqueNode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UniqueNode"}],"url":"\/documentation\/distributedactors\/uniquenode"},"doc://DistributedActors/documentation/DistributedActors/DistributedActorContext":{"role":"symbol","title":"DistributedActorContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DistributedActorContext"}],"abstract":[{"type":"text","text":"Internal context object used by the actor system to support per-actor state, such as necessary to implement lifecycle watch etc."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/DistributedActorContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DistributedActorContext"}],"url":"\/documentation\/distributedactors\/distributedactorcontext"},"doc://DistributedActors/documentation/DistributedActors/Serialization":{"role":"symbol","title":"Serialization","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Serialization"}],"abstract":[{"type":"text","text":"Actor messaging specialized serialization engine."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Serialization"}],"url":"\/documentation\/distributedactors\/serialization"},"doc://DistributedActors/documentation/DistributedActors/DowningStrategy":{"role":"symbol","title":"DowningStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DowningStrategy"}],"abstract":[{"type":"text","text":"Allows implementing downing strategies, without having to re-implement and reinvent logging and subscription logic."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/DowningStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DowningStrategy"}],"url":"\/documentation\/distributedactors\/downingstrategy"},"doc://DistributedActors/documentation/DistributedActors/LeftOverBytesError":{"role":"symbol","title":"LeftOverBytesError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LeftOverBytesError"}],"abstract":[{"type":"text","text":"Error indicating that after an operation some unused bytes are left."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/LeftOverBytesError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LeftOverBytesError"}],"url":"\/documentation\/distributedactors\/leftoverbyteserror"},"doc://DistributedActors/documentation/DistributedActors/Observability":{"role":"article","title":"Observability","abstract":[{"type":"text","text":"The cluster system offers a number of built-in observability capabilities about the state of the cluster, as well as distributed actors it manages."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Observability","kind":"article","type":"topic","url":"\/documentation\/distributedactors\/observability"},"doc://DistributedActors/documentation/DistributedActors/DistributedReceptionist":{"role":"symbol","title":"DistributedReceptionist","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DistributedReceptionist"}],"abstract":[{"type":"text","text":"A receptionist is a system actor that allows users to register actors under"},{"type":"text","text":" "},{"type":"text","text":"a key to make them available to other parts of the system, without having to"},{"type":"text","text":" "},{"type":"text","text":"share a reference with that specific part directly."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/DistributedReceptionist","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DistributedReceptionist"}],"url":"\/documentation\/distributedactors\/distributedreceptionist"},"doc://DistributedActors/documentation/DistributedActors/Cluster/Member":{"role":"symbol","title":"Cluster.Member","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Member"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Member"},{"type":"text","text":" is a node that is participating in a clustered system."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Cluster\/Member","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Member"}],"url":"\/documentation\/distributedactors\/cluster\/member"},"doc://DistributedActors/documentation/DistributedActors/RemoteCallError":{"role":"symbol","title":"RemoteCallError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemoteCallError"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/RemoteCallError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RemoteCallError"}],"url":"\/documentation\/distributedactors\/remotecallerror"},"doc://DistributedActors/documentation/DistributedActors/ActiveMetricsOptionSet":{"role":"symbol","title":"ActiveMetricsOptionSet","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActiveMetricsOptionSet"}],"abstract":[{"type":"text","text":"Defines which per actor (group) metrics are enabled for a given actor."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActiveMetricsOptionSet","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActiveMetricsOptionSet"}],"url":"\/documentation\/distributedactors\/activemetricsoptionset"},"doc://DistributedActors/documentation/DistributedActors/ClusterSystem/ActorID":{"role":"symbol","title":"ClusterSystem.ActorID","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorID"}],"abstract":[{"type":"text","text":"Uniquely identifies a DistributedActor within the cluster."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystem\/ActorID","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActorID"}],"url":"\/documentation\/distributedactors\/clustersystem\/actorid"},"doc://DistributedActors/documentation/DistributedActors/Security":{"role":"article","title":"Security","abstract":[{"type":"text","text":"Configuring security aspects of your cluster system."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Security","kind":"article","type":"topic","url":"\/documentation\/distributedactors\/security"},"doc://DistributedActors/documentation/DistributedActors/Node":{"role":"symbol","title":"Node","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Node"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Node"},{"type":"text","text":" is a triplet of protocol, host and port that a node is bound to."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Node","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Node"}],"url":"\/documentation\/distributedactors\/node"},"doc://DistributedActors/documentation/DistributedActors/ActorPathSegment":{"role":"symbol","title":"ActorPathSegment","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorPathSegment"}],"abstract":[{"type":"text","text":"Represents a single segment (actor name) of an ActorPath."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorPathSegment","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActorPathSegment"}],"url":"\/documentation\/distributedactors\/actorpathsegment"},"doc://DistributedActors/documentation/DistributedActors/WeakAnyDistributedActorDictionary":{"role":"symbol","title":"WeakAnyDistributedActorDictionary","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakAnyDistributedActorDictionary"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/WeakAnyDistributedActorDictionary","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WeakAnyDistributedActorDictionary"}],"url":"\/documentation\/distributedactors\/weakanydistributedactordictionary"},"doc://DistributedActors/documentation/DistributedActors/CodableSerializationContext/actorSerializationContext":{"role":"symbol","title":"actorSerializationContext","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"actorSerializationContext"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Serialization","preciseIdentifier":"s:17DistributedActors13SerializationC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:17DistributedActors13SerializationC7ContextV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Extracts an "},{"type":"codeVoice","code":"Serialization.Context"},{"type":"text","text":" which can be used to perform actor serialization specific tasks"},{"type":"text","text":" "},{"type":"text","text":"such as resolving an actor ref from its serialized form."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/CodableSerializationContext\/actorSerializationContext","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/distributedactors\/codableserializationcontext\/actorserializationcontext"},"doc://DistributedActors/documentation/DistributedActors/Lifecycle":{"role":"article","title":"Lifecycle Monitoring","abstract":[{"type":"text","text":"Monitoring distributed actor lifecycles regardless of their location."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Lifecycle","kind":"article","type":"topic","url":"\/documentation\/distributedactors\/lifecycle"},"doc://DistributedActors/documentation/DistributedActors/MetricsProps":{"role":"symbol","title":"MetricsProps","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsProps"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/MetricsProps","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MetricsProps"}],"url":"\/documentation\/distributedactors\/metricsprops"},"doc://DistributedActors/documentation/DistributedActors/OutboundSystemMessageRedeliverySettings":{"role":"symbol","title":"OutboundSystemMessageRedeliverySettings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundSystemMessageRedeliverySettings"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/OutboundSystemMessageRedeliverySettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OutboundSystemMessageRedeliverySettings"}],"url":"\/documentation\/distributedactors\/outboundsystemmessageredeliverysettings"},"doc://DistributedActors/documentation/DistributedActors/ClusterControl":{"role":"symbol","title":"ClusterControl","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterControl"}],"abstract":[{"type":"text","text":"Allows controlling the cluster, e.g. by issuing join\/down commands, or subscribing to cluster events."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterControl","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterControl"}],"url":"\/documentation\/distributedactors\/clustercontrol"},"doc://DistributedActors/documentation/DistributedActors/ActorID":{"role":"symbol","title":"ActorID","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorID"}],"abstract":[{"type":"text","text":"Convenience alias for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystem\/ActorID"},{"type":"text","text":"."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorID","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActorID"}],"url":"\/documentation\/distributedactors\/actorid"},"doc://DistributedActors/documentation/DistributedActors/Backoff":{"role":"symbol","title":"Backoff","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Backoff"}],"abstract":[{"type":"text","text":"Factory for "},{"type":"codeVoice","code":"BackoffStrategy"},{"type":"text","text":" instances."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Backoff","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Backoff"}],"url":"\/documentation\/distributedactors\/backoff"},"doc://DistributedActors/documentation/DistributedActors/Receptionist":{"role":"article","title":"Receptionist","abstract":[{"type":"text","text":"Discovering actors is an important aspect of distributed programming, as it is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"the"}]},{"type":"text","text":" primary way we can discover actors on other nodes,"},{"type":"text","text":" "},{"type":"text","text":"and communicate with them."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Receptionist","kind":"article","type":"topic","url":"\/documentation\/distributedactors\/receptionist"},"doc://DistributedActors/documentation/DistributedActors/TimeoutBasedDowningStrategySettings":{"role":"symbol","title":"TimeoutBasedDowningStrategySettings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeoutBasedDowningStrategySettings"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/TimeoutBasedDowningStrategySettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TimeoutBasedDowningStrategySettings"}],"url":"\/documentation\/distributedactors\/timeoutbaseddowningstrategysettings"},"doc://DistributedActors/documentation/DistributedActors/AnySerializer":{"role":"symbol","title":"AnySerializer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnySerializer"}],"abstract":[{"type":"text","text":"Abstracts over different Encoder\/Decoder and other serialization mechanisms."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/AnySerializer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnySerializer"}],"url":"\/documentation\/distributedactors\/anyserializer"},"doc://DistributedActors/documentation/DistributedActors/GenericRemoteCallError":{"role":"symbol","title":"GenericRemoteCallError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericRemoteCallError"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/GenericRemoteCallError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GenericRemoteCallError"}],"url":"\/documentation\/distributedactors\/genericremotecallerror"},"doc://DistributedActors/documentation/DistributedActors":{"role":"collection","title":"DistributedActors","abstract":[{"type":"text","text":"A peer-to-peer cluster actor system implementation for Swift."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors"},"doc://DistributedActors/documentation/DistributedActors/ActorMetadata":{"role":"symbol","title":"ActorMetadata","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorMetadata"}],"abstract":[{"type":"text","text":"Container of tags a concrete actor identity was tagged with."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorMetadata","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActorMetadata"}],"url":"\/documentation\/distributedactors\/actormetadata"},"doc://DistributedActors/documentation/DistributedActors/AnyReceptionKey":{"role":"symbol","title":"AnyReceptionKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyReceptionKey"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/AnyReceptionKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyReceptionKey"}],"url":"\/documentation\/distributedactors\/anyreceptionkey"},"doc://DistributedActors/documentation/DistributedActors/WorkerPoolSettings":{"role":"symbol","title":"WorkerPoolSettings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WorkerPoolSettings"}],"abstract":[{"type":"text","text":"Used to configure a "},{"type":"codeVoice","code":"WorkerPool"},{"type":"text","text":"."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/WorkerPoolSettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WorkerPoolSettings"}],"url":"\/documentation\/distributedactors\/workerpoolsettings"},"doc://DistributedActors/documentation/DistributedActors/ResolveError":{"role":"symbol","title":"ResolveError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResolveError"}],"abstract":[{"type":"text","text":"Error thrown when unable to resolve an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorID"},{"type":"text","text":"."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ResolveError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ResolveError"}],"url":"\/documentation\/distributedactors\/resolveerror"},"doc://DistributedActors/documentation/DistributedActors/WeakActorDictionary":{"role":"symbol","title":"WeakActorDictionary","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakActorDictionary"}],"abstract":[{"type":"text","text":"A dictionary which only weakly retains the"}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/WeakActorDictionary","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WeakActorDictionary"}],"url":"\/documentation\/distributedactors\/weakactordictionary"},"doc://DistributedActors/documentation/DistributedActors/AnyActorMetadataKey":{"role":"symbol","title":"AnyActorMetadataKey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyActorMetadataKey"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/AnyActorMetadataKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyActorMetadataKey"}],"url":"\/documentation\/distributedactors\/anyactormetadatakey"},"doc://DistributedActors/documentation/DistributedActors/ConstantBackoffStrategy":{"role":"symbol","title":"ConstantBackoffStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstantBackoffStrategy"}],"abstract":[{"type":"text","text":"Simple strategy, always yielding the same backoff interval."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ConstantBackoffStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConstantBackoffStrategy"}],"url":"\/documentation\/distributedactors\/constantbackoffstrategy"},"doc://DistributedActors/documentation/DistributedActors/ActorMetadataKeys":{"role":"symbol","title":"ActorMetadataKeys","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorMetadataKeys"}],"abstract":[{"type":"text","text":"Namespace for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorID"},{"type":"text","text":" metadata."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorMetadataKeys","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActorMetadataKeys"}],"url":"\/documentation\/distributedactors\/actormetadatakeys"},"doc://DistributedActors/documentation/DistributedActors/DistributedWorker":{"role":"symbol","title":"DistributedWorker","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DistributedWorker"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/DistributedWorker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DistributedWorker"}],"url":"\/documentation\/distributedactors\/distributedworker"},"doc://DistributedActors/documentation/DistributedActors/ClusterEventStream":{"role":"symbol","title":"ClusterEventStream","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterEventStream"}],"abstract":[{"type":"codeVoice","code":"ClusterEventStream"},{"type":"text","text":" manages a set of subscribers and forwards every event published to it to"},{"type":"text","text":" "},{"type":"text","text":"all its subscribers. An actor can subscribe\/unsubscribe to the event stream via "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":" "},{"type":"text","text":"constructs. Subscribers will be watched and removed in case they terminate."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterEventStream","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterEventStream"}],"url":"\/documentation\/distributedactors\/clustereventstream"},"doc://DistributedActors/documentation/DistributedActors/ServiceDiscoverySettings":{"role":"symbol","title":"ServiceDiscoverySettings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServiceDiscoverySettings"}],"abstract":[{"type":"text","text":"Configure initial contact point discovery to use a "},{"type":"codeVoice","code":"ServiceDiscovery"},{"type":"text","text":" implementation."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ServiceDiscoverySettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ServiceDiscoverySettings"}],"url":"\/documentation\/distributedactors\/servicediscoverysettings"},"doc://DistributedActors/documentation/DistributedActors/NonTransportableAnyError":{"role":"symbol","title":"NonTransportableAnyError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonTransportableAnyError"}],"abstract":[{"type":"text","text":"Useful error wrapper which performs an best effort Error serialization as configured by the actor system."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/NonTransportableAnyError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NonTransportableAnyError"}],"url":"\/documentation\/distributedactors\/nontransportableanyerror"},"doc://DistributedActors/documentation/DistributedActors/Serialization/Manifest":{"role":"symbol","title":"Serialization.Manifest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Manifest"}],"abstract":[{"type":"text","text":"Serialization manifests are used to carry enough information along a serialized payload,"},{"type":"text","text":" "},{"type":"text","text":"such that the payload may be safely deserialized into the right type on the recipient system."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization\/Manifest","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Manifest"}],"url":"\/documentation\/distributedactors\/serialization\/manifest"},"doc://DistributedActors/documentation/DistributedActors/BackoffStrategy":{"role":"symbol","title":"BackoffStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BackoffStrategy"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"BackoffStrategy"},{"type":"text","text":" abstracts over logic which computes appropriate time amounts to back off at, for a specific call."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/BackoffStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BackoffStrategy"}],"url":"\/documentation\/distributedactors\/backoffstrategy"},"doc://DistributedActors/documentation/DistributedActors/AddressableActor":{"role":"symbol","title":"AddressableActor","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AddressableActor"}],"abstract":[{"type":"text","text":"Any actor which is able to erase itself into an untyped "},{"type":"codeVoice","code":"_AddressableActorRef"},{"type":"text","text":"."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/AddressableActor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AddressableActor"}],"url":"\/documentation\/distributedactors\/addressableactor"},"doc://DistributedActors/documentation/DistributedActors/UniqueNodeID":{"role":"symbol","title":"UniqueNodeID","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UniqueNodeID"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/UniqueNodeID","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UniqueNodeID"}],"url":"\/documentation\/distributedactors\/uniquenodeid"},"doc://DistributedActors/documentation/DistributedActors/DeadLetter":{"role":"symbol","title":"DeadLetter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeadLetter"}],"abstract":[{"type":"text","text":"A “dead letter” is a message (“letter”) that is impossible to deliver to its designated recipient."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/DeadLetter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DeadLetter"}],"url":"\/documentation\/distributedactors\/deadletter"},"doc://DistributedActors/documentation/DistributedActors/Cluster/MemberStatus/up":{"role":"symbol","title":"Cluster.MemberStatus.up","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"up"}],"abstract":[{"type":"text","text":"Describes a node which at some point was known to the leader and moved to "},{"type":"codeVoice","code":".up"},{"type":"text","text":" "},{"type":"text","text":"by whichever strategy it implements for this. Generally, up members are fully ready"},{"type":"text","text":" "},{"type":"text","text":"members of the cluster and are most likely known to many if not all other nodes in the cluster."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Cluster\/MemberStatus\/up","kind":"symbol","type":"topic","url":"\/documentation\/distributedactors\/cluster\/memberstatus\/up"},"doc://DistributedActors/documentation/DistributedActors/LeaderElection":{"role":"symbol","title":"LeaderElection","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LeaderElection"}],"abstract":[{"type":"text","text":"Leader election allows for determining a “leader” node among members."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/LeaderElection","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LeaderElection"}],"url":"\/documentation\/distributedactors\/leaderelection"},"doc://DistributedActors/documentation/DistributedActors/ExponentialBackoffStrategy":{"role":"symbol","title":"ExponentialBackoffStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"abstract":[{"type":"text","text":"Backoff strategy exponentially yielding greater time amounts each time when triggered."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ExponentialBackoffStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ExponentialBackoffStrategy"}],"url":"\/documentation\/distributedactors\/exponentialbackoffstrategy"},"doc://DistributedActors/documentation/DistributedActors/SerializationRepresentable":{"role":"symbol","title":"SerializationRepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerializationRepresentable"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/SerializationRepresentable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SerializationRepresentable"}],"url":"\/documentation\/distributedactors\/serializationrepresentable"},"doc://DistributedActors/documentation/DistributedActors/LeaderElectionResult":{"role":"symbol","title":"LeaderElectionResult","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LeaderElectionResult"}],"abstract":[{"type":"text","text":"Result of running a "},{"type":"codeVoice","code":"LeaderElection"},{"type":"text","text":", which may be performed asynchronously (or not)."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/LeaderElectionResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LeaderElectionResult"}],"url":"\/documentation\/distributedactors\/leaderelectionresult"},"doc://DistributedActors/documentation/DistributedActors/DowningStrategySettings":{"role":"symbol","title":"DowningStrategySettings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DowningStrategySettings"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/DowningStrategySettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DowningStrategySettings"}],"url":"\/documentation\/distributedactors\/downingstrategysettings"},"doc://DistributedActors/documentation/DistributedActors/RemoteCall":{"role":"symbol","title":"RemoteCall","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemoteCall"}],"abstract":[{"type":"text","text":"Allows for configuring of remote calls by setting task-local values around a remote call being made."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/RemoteCall","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RemoteCall"}],"url":"\/documentation\/distributedactors\/remotecall"},"doc://DistributedActors/documentation/DistributedActors/CodableSerializationContext":{"role":"symbol","title":"CodableSerializationContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodableSerializationContext"}],"abstract":[{"type":"text","text":"Protocol conformed to by "},{"type":"codeVoice","code":"Foundation.Encoder"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Foundation.Decoder"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"which provides simple access to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/CodableSerializationContext\/actorSerializationContext"},{"type":"text","text":"."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/CodableSerializationContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CodableSerializationContext"}],"url":"\/documentation\/distributedactors\/codableserializationcontext"},"doc://DistributedActors/documentation/DistributedActors/TimeoutError":{"role":"symbol","title":"TimeoutError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeoutError"}],"abstract":[{"type":"text","text":"Error that signals that an operation timed out."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/TimeoutError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TimeoutError"}],"url":"\/documentation\/distributedactors\/timeouterror"},"doc://DistributedActors/documentation/DistributedActors/ClusterInvocationResultHandler":{"role":"symbol","title":"ClusterInvocationResultHandler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterInvocationResultHandler"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterInvocationResultHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterInvocationResultHandler"}],"url":"\/documentation\/distributedactors\/clusterinvocationresulthandler"},"doc://DistributedActors/documentation/DistributedActors/ClusterSystem":{"role":"symbol","title":"ClusterSystem","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterSystem"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ClusterSystem"},{"type":"text","text":" is a confined space which runs and manages Actors."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSystem","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterSystem"}],"url":"\/documentation\/distributedactors\/clustersystem"},"doc://DistributedActors/documentation/DistributedActors/LoggingSettings":{"role":"symbol","title":"LoggingSettings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoggingSettings"}],"abstract":[{"type":"text","text":"Settings which allow customizing logging behavior by various sub-systems of the cluster system."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/LoggingSettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LoggingSettings"}],"url":"\/documentation\/distributedactors\/loggingsettings"},"doc://DistributedActors/documentation/DistributedActors/TimeoutBasedDowningStrategy":{"role":"symbol","title":"TimeoutBasedDowningStrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeoutBasedDowningStrategy"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"TimeoutBasedDowningStrategy"},{"type":"text","text":" marks nodes that have been unreachable as "},{"type":"codeVoice","code":".down"},{"type":"text","text":" after a configurable timeout."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/TimeoutBasedDowningStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TimeoutBasedDowningStrategy"}],"url":"\/documentation\/distributedactors\/timeoutbaseddowningstrategy"},"doc://DistributedActors/documentation/DistributedActors/Serialization/Buffer":{"role":"symbol","title":"Serialization.Buffer","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Buffer"}],"abstract":[{"type":"text","text":"Abstraction of bytes containers."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization\/Buffer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Buffer"}],"url":"\/documentation\/distributedactors\/serialization\/buffer"},"https://swift.org/download/#snapshots":{"title":"Swift.org","titleInlineContent":[{"type":"text","text":"Swift.org"}],"type":"link","identifier":"https:\/\/swift.org\/download\/#snapshots","url":"https:\/\/swift.org\/download\/#snapshots"},"doc://DistributedActors/documentation/DistributedActors/ClusterInvocationEncoder":{"role":"symbol","title":"ClusterInvocationEncoder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterInvocationEncoder"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterInvocationEncoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterInvocationEncoder"}],"url":"\/documentation\/distributedactors\/clusterinvocationencoder"},"doc://DistributedActors/documentation/DistributedActors/CustomPrettyStringConvertible":{"role":"symbol","title":"CustomPrettyStringConvertible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomPrettyStringConvertible"}],"abstract":[{"type":"text","text":"Marks a type that can be “pretty” printed, meaning often multi-line well formatted\/aligned."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/CustomPrettyStringConvertible","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CustomPrettyStringConvertible"}],"url":"\/documentation\/distributedactors\/customprettystringconvertible"},"doc://DistributedActors/documentation/DistributedActors/ActorPath":{"role":"symbol","title":"ActorPath","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorPath"}],"abstract":[{"type":"text","text":"Represents the name and placement within the actor hierarchy of a given actor."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorPath","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActorPath"}],"url":"\/documentation\/distributedactors\/actorpath"},"doc://DistributedActors/documentation/DistributedActors/InvocationMessage":{"role":"symbol","title":"InvocationMessage","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InvocationMessage"}],"abstract":[{"type":"text","text":"Representation of the distributed invocation in the Behavior APIs."},{"type":"text","text":" "},{"type":"text","text":"This needs to be removed eventually as we remove behaviors."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/InvocationMessage","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InvocationMessage"}],"url":"\/documentation\/distributedactors\/invocationmessage"},"doc://DistributedActors/documentation/DistributedActors/Introduction":{"role":"article","title":"Introducing Distributed Actors","abstract":[{"type":"text","text":"A high-level introduction to distributed actor systems."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Introduction","kind":"article","type":"topic","url":"\/documentation\/distributedactors\/introduction"},"doc://DistributedActors/documentation/DistributedActors/Cluster":{"role":"symbol","title":"Cluster","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cluster"}],"abstract":[{"type":"text","text":"Cluster namespace."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Cluster","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Cluster"}],"url":"\/documentation\/distributedactors\/cluster"},"doc://DistributedActors/documentation/DistributedActors/ErrorEnvelope":{"role":"symbol","title":"ErrorEnvelope","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ErrorEnvelope"}],"abstract":[{"type":"text","text":"Generic transportable Error type, can be used to wrap error types and represent them as best as possible for transporting."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ErrorEnvelope","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ErrorEnvelope"}],"url":"\/documentation\/distributedactors\/errorenvelope"},"doc://DistributedActors/documentation/DistributedActors/OnDownActionStrategySettings":{"role":"symbol","title":"OnDownActionStrategySettings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OnDownActionStrategySettings"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/OnDownActionStrategySettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OnDownActionStrategySettings"}],"url":"\/documentation\/distributedactors\/ondownactionstrategysettings"},"doc://DistributedActors/documentation/DistributedActors/ActorMetadataKey":{"role":"symbol","title":"ActorMetadataKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorMetadataKey"}],"abstract":[{"type":"text","text":"Declares a key to be used with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorMetadata"},{"type":"text","text":", which allows attaching various metadata to an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorID"},{"type":"text","text":"."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorMetadataKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActorMetadataKey"}],"url":"\/documentation\/distributedactors\/actormetadatakey"},"doc://DistributedActors/documentation/DistributedActors/Leadership":{"role":"symbol","title":"Leadership","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Leadership"}],"abstract":[{"type":"text","text":"Leadership encapsulates various "},{"type":"codeVoice","code":"LeaderElection"},{"type":"text","text":" strategies."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Leadership","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Leadership"}],"url":"\/documentation\/distributedactors\/leadership"},"doc://DistributedActors/documentation/DistributedActors/ActorIncarnation":{"role":"symbol","title":"ActorIncarnation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorIncarnation"}],"abstract":[{"type":"text","text":"Used to uniquely identify a specific “incarnation” of an Actor and therefore provide unique identity to "},{"type":"codeVoice","code":"ActorID"},{"type":"text","text":" and "},{"type":"codeVoice","code":"_ActorRef"},{"type":"text","text":"s."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ActorIncarnation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActorIncarnation"}],"url":"\/documentation\/distributedactors\/actorincarnation"},"doc://DistributedActors/documentation/DistributedActors/WorkerPool":{"role":"symbol","title":"WorkerPool","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WorkerPool"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/WorkerPool","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WorkerPool"}],"url":"\/documentation\/distributedactors\/workerpool"},"doc://DistributedActors/documentation/DistributedActors/WorkerPoolError":{"role":"symbol","title":"WorkerPoolError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WorkerPoolError"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/WorkerPoolError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WorkerPoolError"}],"url":"\/documentation\/distributedactors\/workerpoolerror"},"doc://DistributedActors/documentation/DistributedActors/DistributedReception":{"role":"symbol","title":"DistributedReception","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DistributedReception"}],"abstract":[{"type":"text","text":"Namespace for public messages related to the DistributedReceptionist."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/DistributedReception","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DistributedReception"}],"url":"\/documentation\/distributedactors\/distributedreception"},"doc://DistributedActors/documentation/DistributedActors/LifecycleWatch":{"role":"symbol","title":"LifecycleWatch","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LifecycleWatch"}],"abstract":[{"type":"text","text":"Provides a distributed actor with the ability to “watch” other actors lifecycles."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/LifecycleWatch","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LifecycleWatch"}],"url":"\/documentation\/distributedactors\/lifecyclewatch"},"doc://DistributedActors/documentation/DistributedActors/ClusterSingleton":{"role":"symbol","title":"ClusterSingleton","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterSingleton"}],"abstract":[{"type":"text","text":"A "},{"type":"emphasis","inlineContent":[{"type":"text","text":"cluster singleton"}]},{"type":"text","text":" is a conceptual distributed actor that is guaranteed to have at-most one"},{"type":"text","text":" "},{"type":"text","text":"instance within the cluster system among all of its "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Cluster\/MemberStatus\/up"},{"type":"text","text":" members."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterSingleton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterSingleton"}],"url":"\/documentation\/distributedactors\/clustersingleton"},"doc://DistributedActors/documentation/DistributedActors/LeaderElectionContext":{"role":"symbol","title":"LeaderElectionContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LeaderElectionContext"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/LeaderElectionContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LeaderElectionContext"}],"url":"\/documentation\/distributedactors\/leaderelectioncontext"},"doc://DistributedActors/documentation/DistributedActors/MetricsSettings":{"role":"symbol","title":"MetricsSettings","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsSettings"}],"abstract":[{"type":"text","text":"Configure metrics exposed by the actor system."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/MetricsSettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MetricsSettings"}],"url":"\/documentation\/distributedactors\/metricssettings"},"doc://DistributedActors/documentation/DistributedActors/DowningStrategyDirective":{"role":"symbol","title":"DowningStrategyDirective","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DowningStrategyDirective"}],"abstract":[{"type":"text","text":"Return to instruct the downing shell how to react."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/DowningStrategyDirective","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DowningStrategyDirective"}],"url":"\/documentation\/distributedactors\/downingstrategydirective"},"doc://DistributedActors/documentation/DistributedActors/ClusterInvocationDecoder":{"role":"symbol","title":"ClusterInvocationDecoder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClusterInvocationDecoder"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/ClusterInvocationDecoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClusterInvocationDecoder"}],"url":"\/documentation\/distributedactors\/clusterinvocationdecoder"},"doc://DistributedActors/documentation/DistributedActors/Serialization/Context":{"role":"symbol","title":"Serialization.Context","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"abstract":[{"type":"text","text":"A context object provided to any "},{"type":"codeVoice","code":"Swift\/Encoder"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"Swift\/Decoder"},{"type":"text","text":" used during remoteCall message serialization"}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Serialization\/Context","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Context"}],"url":"\/documentation\/distributedactors\/serialization\/context"},"doc://DistributedActors/documentation/DistributedActors/SerializationError":{"role":"symbol","title":"SerializationError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerializationError"}],"abstract":[],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/SerializationError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SerializationError"}],"url":"\/documentation\/distributedactors\/serializationerror"},"doc://DistributedActors/documentation/DistributedActors/Cluster/Membership":{"role":"symbol","title":"Cluster.Membership","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Membership"}],"abstract":[{"type":"text","text":"Represents the set of members of this cluster."}],"identifier":"doc:\/\/DistributedActors\/documentation\/DistributedActors\/Cluster\/Membership","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Membership"}],"url":"\/documentation\/distributedactors\/cluster\/membership"}}}